/**
 * Clearance API
 * Clearance.gg API docs for all the bots and monitors
 *
 * OpenAPI spec version: 1.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { AxiosResponse, AxiosInstance, AxiosRequestConfig } from 'axios';
import { Configuration } from '../configuration';
import { RequestArgs, BaseAPI } from '../base';
import { CreateProxiesDto } from '../models';
/**
 * ProxiesApi - axios parameter creator
 * @export
 */
export declare const ProxiesApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary Add new proxies
     * @param {CreateProxiesDto} body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    proxiesControllerAddProxies: (body: CreateProxiesDto, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @summary Delete all proxies
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    proxiesControllerDeleteAllProxies: (options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @summary Fetch all proxies
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    proxiesControllerGetAllProxies: (options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * ProxiesApi - functional programming interface
 * @export
 */
export declare const ProxiesApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary Add new proxies
     * @param {CreateProxiesDto} body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    proxiesControllerAddProxies(body: CreateProxiesDto, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<void>>>;
    /**
     *
     * @summary Delete all proxies
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    proxiesControllerDeleteAllProxies(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<void>>>;
    /**
     *
     * @summary Fetch all proxies
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    proxiesControllerGetAllProxies(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<Array<CreateProxiesDto>>>>;
};
/**
 * ProxiesApi - factory interface
 * @export
 */
export declare const ProxiesApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary Add new proxies
     * @param {CreateProxiesDto} body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    proxiesControllerAddProxies(body: CreateProxiesDto, options?: AxiosRequestConfig): Promise<AxiosResponse<void>>;
    /**
     *
     * @summary Delete all proxies
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    proxiesControllerDeleteAllProxies(options?: AxiosRequestConfig): Promise<AxiosResponse<void>>;
    /**
     *
     * @summary Fetch all proxies
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    proxiesControllerGetAllProxies(options?: AxiosRequestConfig): Promise<AxiosResponse<Array<CreateProxiesDto>>>;
};
/**
 * ProxiesApi - object-oriented interface
 * @export
 * @class ProxiesApi
 * @extends {BaseAPI}
 */
export declare class ProxiesApi extends BaseAPI {
    /**
     *
     * @summary Add new proxies
     * @param {CreateProxiesDto} body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ProxiesApi
     */
    proxiesControllerAddProxies(body: CreateProxiesDto, options?: AxiosRequestConfig): Promise<AxiosResponse<void>>;
    /**
     *
     * @summary Delete all proxies
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ProxiesApi
     */
    proxiesControllerDeleteAllProxies(options?: AxiosRequestConfig): Promise<AxiosResponse<void>>;
    /**
     *
     * @summary Fetch all proxies
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ProxiesApi
     */
    proxiesControllerGetAllProxies(options?: AxiosRequestConfig): Promise<AxiosResponse<Array<CreateProxiesDto>>>;
}
